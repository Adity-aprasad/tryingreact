import { StatusBar } from 'expo-status-bar';
import { Alert, Button, Pressable, StyleSheet, Text, TextInput, TouchableOpacity, View, FlatList } from 'react-native';
import React, { useState } from 'react';



const Greeting=({name,age})=>{
  return(
    <Text style={styles.text} >
      herllo {name}! with age {age}
    </Text>


  );
};

const Touched=({pressed,title})=>{
  return(
    <Text onPress={pressed}>
      {title}

    </Text>

  );

};


export default function App() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [name,setname]=useState({name:'aditya' ,age:'23'});

  const updatename=()=>{
    setname({...name,name:'adi'});
  };

  const data = [
    { id: '1', title: 'Apple' },
    { id: '2', title: 'Banana' },
    { id: '3', title: 'Pineapple' },
    { id: '4', title: 'Grapes' },
    { id: '5', title: 'Orange' },
  ];

  const renderItem = ({ item }) => (
    <View style={styles.item}>
      <Text style={styles.itemText}>{item.title}</Text>
    </View>
  );


const handlePress=()=>{
  console.log("Button pressed!");
}

  return (
    <FlatList
      style={styles.main}
      ListHeaderComponent={
        <View style={styles.container}>
          <Text style={styles.title}>Welcome to the App!</Text>

          <View style={styles.box}>
            <TextInput
              style={styles.input}
              placeholder="Enter username"
              value={username}
              onChangeText={setUsername}
            />
            <TextInput
              style={styles.input}
              placeholder="Enter password"
              value={password}
              onChangeText={setPassword}
              secureTextEntry={true}
            />
          </View>
          <View>
          <Greeting name="Alice" age="345" />
          <Greeting name="Bob" age="20" />
          </View>
          <View>
            <Touched
            title="click Me" pressed={handlePress}
            />
          </View>


          <View>
            <Text>
              Name: {name.name}
            </Text>
            <Text>
              Age:{name.age}
            </Text>
            <Button 
            title="click"
            onPress={updatename}/>
          </View>


          <View style={styles.buttonContainer}>
            <Button title="Submit" onPress={() => Alert.alert('Button Pressed')} />
            <TouchableOpacity style={styles.customButton} onPress={() => console.log('Touchable Pressed')}>
              <Text style={styles.customButtonText}>Custom Button</Text>
            </TouchableOpacity>
            <Pressable
              style={({ pressed }) => [
                styles.pressableButton,
                { backgroundColor: pressed ? 'blue' : 'green' },
              ]}
              onPress={() => console.log('Pressable Button Pressed')}
            >
              <Text style={styles.pressableText}>Pressable Button</Text>
            </Pressable>
          </View>
        </View>
      }
      data={data}
      renderItem={renderItem}
      keyExtractor={(item) => item.no}
      //horizontal={true}
      //numColumns={5}
     // contentContainerStyle={styles.list}
    />
  );
}

const styles = StyleSheet.create({
  main: {
    flex: 1,
    backgroundColor: '#f5f5f5',
  },
  container: {
    padding: 20,
    alignItems: 'center',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginVertical: 20,
    color: '#333',
  },
  box: {
    width: '100%',
    marginVertical: 20,
  },
  input: {
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 8,
    padding: 10,
    marginBottom: 10,
    fontSize: 16,
    backgroundColor: '#fff',
  },
  buttonContainer: {
    marginVertical: 20,
    width: '100%',
    alignItems: 'center',
  },
  customButton: {
    marginVertical: 10,
    backgroundColor: '#007bff',
    padding: 10,
    borderRadius: 8,
    alignItems: 'center',
  },
  customButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  pressableButton: {
    marginVertical: 10,
    padding: 10,
    borderRadius: 8,
    alignItems: 'center',
  },
  pressableText: {
    color: '#fff',
    fontSize: 16,
  },
  list: {
    paddingBottom: 20,
  },
  item: {
    backgroundColor: '#e1f5fe',
    padding: 15,
    marginVertical: 8,
    marginHorizontal: 16,
    borderRadius: 8,
    alignItems: 'center',
  },
  itemText: {
    fontSize: 16,
    color: '#333',
  },
});
